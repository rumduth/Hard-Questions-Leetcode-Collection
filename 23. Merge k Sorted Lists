# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        dummy = ListNode()
        temp = dummy
        min_heap = []
        
        for i, head in enumerate(lists):
            if head:
                heapq.heappush(min_heap,(head.val,i,head))
        
        while min_heap:
            val, i, head = heapq.heappop(min_heap)
            if head.next:
                heapq.heappush(min_heap,(head.next.val,i,head.next))
            temp.next = head
            temp = temp.next
            if len(min_heap) == 1:
                temp.next = min_heap[0][2]
                return dummy.next
        return dummy.next

        
